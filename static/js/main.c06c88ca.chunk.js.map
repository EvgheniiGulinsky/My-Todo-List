{"version":3,"sources":["components/NewTaskForm/NewTaskForm.js","components/Header/Header.js","components/TaskFilter/TaskFilter.js","components/Footer/Footer.js","components/Task/Task.js","components/TaskList/TaskList.js","index.js"],"names":["NewTaskForm","props","className","placeholder","autoFocus","autoComplete","onKeyDown","onTaskAdd","id","Header","TaskFilter","onTaskFilter","filterButtons","document","querySelectorAll","onClick","e","includes","target","forEach","el","classList","remove","add","Footer","todos","onClearCompleted","tasksLeft","filter","status","length","Task","this","task","identifier","onTaskEdit","onTaskDelete","onTaskComplete","type","description","defaultValue","Component","TaskList","tasks","map","key","App","state","createTodoItem","setState","index","findIndex","slice","form","getElementById","value","newTasks","ReactDOM","render"],"mappings":"8OAaeA,EAXK,SAACC,GACnB,OAAQ,uBAAOC,UAAU,WACVC,YAAY,yBACZC,UAAU,GACVC,aAAa,MACbC,UAAWL,EAAMM,UACjBC,GAAG,mBCKLC,EAVA,SAACR,GACZ,OACA,yBAAQC,UAAU,SAAlB,UACE,8CACA,cAAC,EAAD,CACEK,UAAaN,EAAMM,gBCiBZG,EAvBI,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACXC,EAAa,YAAOC,SAASC,iBAAiB,uBACpD,OACI,qBAAIZ,UAAU,UAAUa,QAAS,SAACC,GAC3BJ,EAAcK,SAASD,EAAEE,UACxBN,EAAcO,SAAQ,SAAAC,GAAE,OAAIA,EAAGC,UAAUC,OAAO,eAChDN,EAAEE,OAAOG,UAAUE,IAAI,YACvBZ,EAAaK,EAAEE,OAAOV,MAJ9B,UAOE,6BACI,wBAAQN,UAAU,WAAWM,GAAG,MAAhC,mBAEJ,6BACI,wBAAQA,GAAG,SAAX,sBAEJ,6BACI,wBAAQA,GAAG,YAAX,6BCDCgB,EAfA,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,iBAAkBf,EAAkB,EAAlBA,aAChCgB,EAAYF,EAAMG,QAAO,SAAAR,GAAE,MAAkB,cAAdA,EAAGS,UAAwBC,OAChE,OAAQ,yBAAQ5B,UAAU,SAAlB,UACI,sBAAMA,UAAU,aAAhB,SACKyB,EAAY,gBAEjB,cAAC,EAAD,CAAYhB,aAAcA,IAC1B,wBAAQT,UAAU,kBAAkBa,QAASW,EAA7C,iCCPKK,E,4JACjB,WAAS,IAAD,EACiEC,KAAK/B,MAAnEgC,EADH,EACGA,KAAMC,EADT,EACSA,WAAYC,EADrB,EACqBA,WAAYC,EADjC,EACiCA,aAAcC,EAD/C,EAC+CA,eACnD,OACI,qBAAInC,UAAW+B,EAAKJ,OAApB,UACI,sBAAK3B,UAAU,OAAf,UACI,uBAAOA,UAAU,SAASoC,KAAK,WAAWvB,QAAS,kBAAMsB,EAAeH,MACxE,kCACI,sBAAMhC,UAAU,cAAhB,SACK+B,EAAKM,cAEV,sBAAMrC,UAAU,eAGpB,wBACIA,UAAU,iBACVa,QAAS,kBAAMoB,EAAWD,MAE9B,wBACIhC,UAAU,oBACVa,QAAS,kBAAMqB,EAAaF,SAGnB,YAAhBD,EAAKJ,OACE,uBACIS,KAAK,OACLpC,UAAU,OACVsC,aAAcP,EAAKM,cAErB,OAzBmBL,O,GAJXO,aCsBjBC,EAtBE,SAAC,GAA+D,IAA9DjB,EAA6D,EAA7DA,MAAOG,EAAsD,EAAtDA,OAAQQ,EAA8C,EAA9CA,aAAcD,EAAgC,EAAhCA,WAAYE,EAAoB,EAApBA,eAEpDM,EADWlB,EAAMG,QAAO,SAAAR,GAAE,MAAe,QAAXQ,GAAoBR,EAAGS,SAAWD,KAC/CgB,KAAI,SAAAxB,GACzB,OACI,cAAC,EAAD,CACEa,KAAMb,EACNc,WAAYd,EAAGyB,IAEfT,aAAcA,EACdD,WAAYA,EACZE,eAAgBA,GAHXjB,EAAGyB,QAQhB,OACE,oBAAI3C,UAAU,YAAd,SACGyC,KCPYG,E,4MACnBC,MAAQ,CACNtB,MAAO,CACL,EAAKuB,eAAe,aAAc,GAClC,EAAKA,eAAe,cAAe,GACnC,EAAKA,eAAe,aAAc,IAEpCpB,OAAQ,O,EAWVQ,aAAe,SAAC5B,GACd,EAAKyC,UAAS,YAAc,IAAZxB,EAAW,EAAXA,MACRyB,EAAQzB,EAAM0B,WAAU,SAAA/B,GAAE,OAAIA,EAAGyB,MAAQrC,KAE/C,MAAO,CAACiB,MADM,sBAAOA,EAAM2B,MAAM,EAAGF,IAAtB,YAAiCzB,EAAM2B,MAAMF,EAAM,U,EAKrE3C,UAAY,SAACS,GACG,UAAVA,EAAE6B,KACJ,EAAKI,UAAS,YAAc,IAAZxB,EAAW,EAAXA,MACR4B,EAAOxC,SAASyC,eAAe,iBAC/BC,EAAQF,EAAKE,MACbtB,EAAO,EAAKe,eAAeO,EAAO9B,EAAMK,OAAS,GACjD0B,EAAQ,sBAAO/B,GAAP,CAAcQ,IAE5B,OADAoB,EAAKE,MAAQ,GACN,CAAC9B,MAAO+B,O,EAKrBrB,WAAa,SAAC3B,GACZ,EAAKyC,UAAS,YAAc,IAAZxB,EAAW,EAAXA,MACR+B,EAAQ,YAAO/B,GAGrB,OADA+B,EADc/B,EAAM0B,WAAU,SAAA/B,GAAE,OAAIA,EAAGyB,MAAQrC,MAC/BqB,OAAS,UAClB,CAACJ,MAAO+B,O,EAInBnB,eAAiB,SAAC7B,GAChB,EAAKyC,UAAS,YAAc,IAAZxB,EAAW,EAAXA,MACR+B,EAAQ,YAAO/B,GACfyB,EAAQzB,EAAM0B,WAAU,SAAA/B,GAAE,OAAIA,EAAGyB,MAAQrC,KAE/C,OADAgD,EAASN,GAAOrB,OAAoC,cAA3B2B,EAASN,GAAOrB,OAAyB,SAAW,YACtE,CAACJ,MAAO+B,O,EAInB9B,iBAAmB,WACjB,EAAKuB,UAAS,YAEZ,MAAO,CAACxB,MAFiB,EAAXA,MACSG,QAAO,SAAAR,GAAE,MAAkB,cAAdA,EAAGS,e,EAK3ClB,aAAe,SAACiB,GACd,EAAKqB,SAAS,CAACrB,OAAQA,K,oDAvDzB,SAAeW,EAAa/B,GAAwB,IAApBqB,EAAmB,uDAAV,SACvC,MAAO,CACLU,YAAaA,EACbV,OAAQA,EACRgB,IAAKrC,K,oBAsDT,WACE,OACE,0BAASN,UAAU,UAAnB,UACE,cAAC,EAAD,CACEK,UAAayB,KAAKzB,YAEpB,0BAASL,UAAU,OAAnB,UACE,cAAC,EAAD,CACEuB,MAAOO,KAAKe,MAAMtB,MAClBG,OAAQI,KAAKe,MAAMnB,OACnBQ,aAAgBJ,KAAKI,aACrBD,WAAcH,KAAKG,WACnBE,eAAkBL,KAAKK,iBAEzB,cAAC,EAAD,CACEZ,MAAOO,KAAKe,MAAMtB,MAClBC,iBAAkBM,KAAKN,iBACvBf,aAAcqB,KAAKrB,yB,GArFE8B,aA6FjCgB,IAASC,OAAO,cAAC,EAAD,IAAS7C,SAASyC,eAAe,W","file":"static/js/main.c06c88ca.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NewTaskForm = (props) => {\r\n  return (<input className=\"new-todo\"\r\n                 placeholder=\"What needs to be done?\"   \r\n                 autoFocus=\"\"\r\n                 autoComplete=\"off\"\r\n                 onKeyDown={props.onTaskAdd}\r\n                 id=\"new-task-form\"\r\n            />\r\n            )\r\n  }\r\n\r\nexport default NewTaskForm","import React from 'react';\r\nimport NewTaskForm from '../NewTaskForm/NewTaskForm'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n    <header className=\"header\">\r\n      <h1>My Todo List</h1>\r\n      <NewTaskForm\r\n        onTaskAdd = {props.onTaskAdd}\r\n      />\r\n    </header>)\r\n  }\r\n\r\nexport default Header","import React from 'react';\r\n\r\nconst TaskFilter = ({onTaskFilter}) => {\r\n    const filterButtons = [...document.querySelectorAll('.filters li button')]\r\n    return (\r\n        <ul className=\"filters\" onClick={(e) => {\r\n            if(filterButtons.includes(e.target)){\r\n                filterButtons.forEach(el => el.classList.remove('selected'))\r\n                e.target.classList.add('selected')\r\n                onTaskFilter(e.target.id)}}\r\n            }\r\n        >\r\n          <li>\r\n              <button className=\"selected\" id='All'>All</button>\r\n          </li>\r\n          <li>\r\n              <button id=\"active\">Active</button>\r\n          </li>\r\n          <li>\r\n              <button id=\"completed\">Completed</button>\r\n          </li>\r\n        </ul>\r\n    )\r\n  }\r\n\r\nexport default TaskFilter","import React from 'react';\r\nimport TaskFilter from '../TaskFilter/TaskFilter'\r\n\r\nconst Footer = ({todos, onClearCompleted, onTaskFilter}) => {\r\n    const tasksLeft = todos.filter(el => el.status !== 'completed').length\r\n    return (<footer className=\"footer\">\r\n                <span className=\"todo-count\">\r\n                    {tasksLeft + ' items left'}\r\n                </span>\r\n                <TaskFilter onTaskFilter={onTaskFilter}/>\r\n                <button className=\"clear-completed\" onClick={onClearCompleted}>\r\n                    Clear completed\r\n                </button>\r\n            </footer>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer","import React, {Component} from 'react';\r\n\r\n\r\nexport default class Task extends Component{\r\n    render(){\r\n        const {task, identifier, onTaskEdit, onTaskDelete, onTaskComplete} = this.props\r\n        return (\r\n            <li className={task.status} key={identifier}>\r\n                <div className=\"view\">\r\n                    <input className=\"toggle\" type=\"checkbox\" onClick={() => onTaskComplete(identifier)}/>\r\n                    <label>\r\n                        <span className=\"description\">\r\n                            {task.description}\r\n                        </span>\r\n                        <span className=\"created\">\r\n                        </span>\r\n                    </label>\r\n                    <button \r\n                        className=\"icon icon-edit\" \r\n                        onClick={() => onTaskEdit(identifier)}\r\n                    />\r\n                    <button \r\n                        className=\"icon icon-destroy\"\r\n                        onClick={() => onTaskDelete(identifier)}\r\n                    />\r\n                </div>\r\n                {task.status === 'editing' ? \r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"edit\" \r\n                            defaultValue={task.description}\r\n                        />\r\n                        : null}\r\n            </li>\r\n        )}\r\n}\r\n\r\n","import React from 'react';\r\nimport Task from '../Task/Task'\r\n \r\n  const TaskList = ({todos, filter, onTaskDelete, onTaskEdit, onTaskComplete}) => {\r\n    const filtered = todos.filter(el => filter === 'All' || el.status === filter)\r\n    const tasks = filtered.map(el => {\r\n      return (\r\n          <Task\r\n            task={el}\r\n            identifier={el.key}\r\n            key={el.key}\r\n            onTaskDelete={onTaskDelete}\r\n            onTaskEdit={onTaskEdit}\r\n            onTaskComplete={onTaskComplete}\r\n          />\r\n      )\r\n    })\r\n\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {tasks}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  export default TaskList","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './app.css'\n\nimport Header from './components/Header/Header'\nimport Footer from './components/Footer/Footer'\nimport TaskList from './components/TaskList/TaskList'\n\n\n\n\n\n\nexport default class App extends Component {\n  state = {\n    todos: [\n      this.createTodoItem('First task', 0),\n      this.createTodoItem('Second task', 1),\n      this.createTodoItem('Third task', 2)\n    ],\n    filter: 'All'\n  }\n\n  createTodoItem(description, id, status = 'active') {\n    return {\n      description: description,\n      status: status,\n      key: id\n    }\n  }\n  \n  onTaskDelete = (id) => {\n    this.setState(({todos}) => {\n      const index = todos.findIndex(el => el.key === id)\n      const newTasks = [...todos.slice(0, index), ...todos.slice(index+1)]\n      return {todos: newTasks}\n    })\n  }\n\n  onTaskAdd = (e) => {\n    if (e.key === 'Enter'){\n      this.setState(({todos}) => {\n        const form = document.getElementById('new-task-form')\n        const value = form.value\n        const task = this.createTodoItem(value, todos.length + 1)\n        const newTasks = [...todos, task]\n        form.value = ''\n        return {todos: newTasks}\n      })\n    }\n  }\n\n  onTaskEdit = (id) => {\n    this.setState(({todos}) => {\n      const newTasks = [...todos]\n      const index = todos.findIndex(el => el.key === id)\n      newTasks[index].status = 'editing'\n      return {todos: newTasks}\n    })\n  }\n\n  onTaskComplete = (id) => {\n    this.setState(({todos}) => {\n      const newTasks = [...todos]\n      const index = todos.findIndex(el => el.key === id)\n      newTasks[index].status = newTasks[index].status === 'completed' ? 'active' : 'completed'\n      return {todos: newTasks}\n    })\n  } \n\n  onClearCompleted = () => {\n    this.setState(({todos}) => {\n      const newTasks = todos.filter(el => el.status !== 'completed')\n      return {todos: newTasks}\n    })\n  } \n\n  onTaskFilter = (filter) => {\n    this.setState({filter: filter})\n  }\n\n  render () {\n    return (\n      <section className=\"todoapp\">\n        <Header \n          onTaskAdd = {this.onTaskAdd}\n        />\n        <section className=\"main\">\n          <TaskList \n            todos={this.state.todos}\n            filter={this.state.filter}\n            onTaskDelete = {this.onTaskDelete}\n            onTaskEdit = {this.onTaskEdit}\n            onTaskComplete = {this.onTaskComplete}\n          />\n          <Footer\n            todos={this.state.todos}\n            onClearCompleted={this.onClearCompleted}\n            onTaskFilter={this.onTaskFilter}\n          />\n        </section>\n      </section>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}