{"version":3,"sources":["components/NewTaskForm/NewTaskForm.js","components/Header/Header.js","components/TaskFilter/TaskFilter.js","components/Footer/Footer.js","components/Task/Task.js","components/TaskList/TaskList.js","index.js"],"names":["NewTaskForm","props","className","placeholder","autoFocus","autoComplete","onKeyDown","onTaskAdd","id","Header","TaskFilter","onTaskFilter","this","onClick","e","filterButtons","document","querySelectorAll","includes","target","forEach","el","classList","remove","add","Component","defaultProps","Footer","todos","onClearCompleted","tasksLeft","filter","status","length","Task","task","identifier","onTaskEdit","onTaskDelete","onTaskComplete","onTaskChange","type","defaultChecked","description","defaultValue","key","newTask","value","TaskList","tasks","map","App","state","createTodoItem","setState","index","findIndex","slice","form","getElementById","newTasks","created","Date","time","formatDistanceToNow","ReactDOM","render"],"mappings":"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","file":"static/js/main.78b987e4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NewTaskForm = (props) => {\r\n  return (<input className=\"new-todo\"\r\n                 placeholder=\"What needs to be done?\"   \r\n                 autoFocus=\"\"\r\n                 autoComplete=\"off\"\r\n                 onKeyDown={props.onTaskAdd}\r\n                 id=\"new-task-form\"\r\n            />\r\n            )\r\n  }\r\n\r\nexport default NewTaskForm","import React from 'react';\r\nimport NewTaskForm from '../NewTaskForm/NewTaskForm'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n    <header className=\"header\">\r\n      <h1>My Todo List</h1>\r\n      <NewTaskForm\r\n        onTaskAdd = {props.onTaskAdd}\r\n      />\r\n    </header>)\r\n  }\r\n\r\nexport default Header","import React, {Component} from 'react';\r\n\r\nexport default class TaskFilter extends Component {\r\n    render() {\r\n        const {onTaskFilter} = this.props\r\n        return(\r\n        <ul className=\"filters\" onClick={(e) => {\r\n            const filterButtons = [...document.querySelectorAll('.filters li button')]\r\n            if(filterButtons.includes(e.target)){\r\n                filterButtons.forEach(el => el.classList.remove('selected'))\r\n                e.target.classList.add('selected')\r\n                onTaskFilter(e.target.id)}}\r\n            }\r\n        >\r\n          <li>\r\n              <button className=\"selected\" id='All'>All</button>\r\n          </li>\r\n          <li>\r\n              <button id=\"active\">Active</button>\r\n          </li>\r\n          <li>\r\n              <button id=\"completed\">Completed</button>\r\n          </li>\r\n        </ul>\r\n        )\r\n    }\r\n    static defaultProps = {\r\n        onTaskFilter: () => {}\r\n    }\r\n  }\r\n\r\n ","import React from 'react';\r\nimport TaskFilter from '../TaskFilter/TaskFilter'\r\n\r\nconst Footer = ({todos, onClearCompleted, onTaskFilter}) => {\r\n    const tasksLeft = todos.filter(el => el.status !== 'completed').length\r\n    return (<footer className=\"footer\">\r\n                <span className=\"todo-count\">\r\n                    {tasksLeft + ' items left'}\r\n                </span>\r\n                <TaskFilter onTaskFilter={onTaskFilter}/>\r\n                <button className=\"clear-completed\" onClick={onClearCompleted}>\r\n                    Clear completed\r\n                </button>\r\n            </footer>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport default class Task extends Component{\r\n    render(){\r\n        const {task, identifier, onTaskEdit, onTaskDelete, onTaskComplete, onTaskChange} = this.props\r\n        return (\r\n            <li className={task.status} key={identifier}>\r\n                <div className=\"view\">\r\n                    <input className=\"toggle\" type=\"checkbox\" defaultChecked={task.status === 'completed' ? 'checked' : ''} onClick={() => onTaskComplete(identifier)}/>\r\n                    <label>\r\n                        <span className=\"description\">\r\n                            {task.description}\r\n                        </span>\r\n                        <span className=\"created\">\r\n                        </span>\r\n                    </label>\r\n                    <button \r\n                        className=\"icon icon-edit\" \r\n                        onClick={() => {\r\n                            if(task.status !== 'completed')\r\n                                onTaskEdit(identifier)\r\n                        }}\r\n                    />\r\n                    <button \r\n                        className=\"icon icon-destroy\"\r\n                        onClick={() => onTaskDelete(identifier)}\r\n                    />\r\n                </div>\r\n                {task.status === 'editing' ? \r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"edit\" \r\n                            defaultValue={task.description}\r\n                            autoFocus\r\n                            onKeyDown={(e) => {\r\n                                if(e.key === 'Enter'){\r\n                                    const newTask = e.target.value\r\n                                    onTaskChange(identifier, newTask)\r\n                                }\r\n                            }}\r\n                        />\r\n                        : null}\r\n            </li>\r\n        )}\r\n    static defaultProps = {\r\n        onTaskEdit: () => {},\r\n        onTaskDelete: () => {},\r\n        onTaskComplete: () => {},\r\n        onTaskChange: () => {}\r\n    }\r\n\r\n    static propTypes = {\r\n        onTaskEdit: PropTypes.func,\r\n        onTaskDelete: PropTypes.func,\r\n        onTaskComplete: PropTypes.func,\r\n        onTaskChange: PropTypes.func,\r\n        task: PropTypes.object\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Task from '../Task/Task'\r\n \r\nexport default class TaskList extends Component {\r\n  render(){\r\n    const {todos, filter, onTaskDelete, onTaskEdit, onTaskComplete, onTaskChange} = this.props\r\n    const filtered = todos.filter(el => filter === 'All' || el.status === filter)\r\n    const tasks = filtered.map(el => {\r\n      return (\r\n          <Task\r\n            task={el}\r\n            identifier={el.key}\r\n            key={el.key}\r\n            onTaskDelete={onTaskDelete}\r\n            onTaskEdit={onTaskEdit}\r\n            onTaskComplete={onTaskComplete}\r\n            onTaskChange={onTaskChange}\r\n          />\r\n      )\r\n    })\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {tasks}\r\n      </ul>\r\n    )}\r\n    static defaultProps = {\r\n      todos: [],\r\n      filter: 'All',\r\n      onTaskDelete: () => {}, \r\n      onTaskEdit: () => {}, \r\n      onTaskComplete: () => {}, \r\n      onTaskChange: () => {}\r\n\r\n    }\r\n    static propTypes = {\r\n      todos: PropTypes.array,\r\n      filter: PropTypes.string,\r\n      onTaskDelete: PropTypes.func, \r\n      onTaskEdit: PropTypes.func, \r\n      onTaskComplete: PropTypes.func, \r\n      onTaskChange: PropTypes.func\r\n    }\r\n  }","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './app.css'\n\nimport Header from './components/Header/Header'\nimport Footer from './components/Footer/Footer'\nimport TaskList from './components/TaskList/TaskList'\nimport { formatDistanceToNow } from 'date-fns'\n\n\n\n\n\n\nexport default class App extends Component {\n  state = {\n    todos: [\n      this.createTodoItem('First task', 0),\n      this.createTodoItem('Second task', 1),\n      this.createTodoItem('Third task', 2)\n    ],\n    filter: 'All'\n  }\n\n  createTodoItem(description, id, status = 'active') {\n    return {\n      description: description,\n      status: status,\n      key: id,\n      created: new Date(),\n      time: formatDistanceToNow(new Date())\n    }\n  }\n  \n\n  onTaskDelete = (id) => {\n    this.setState(({todos}) => {\n      const index = todos.findIndex(el => el.key === id)\n      const newTasks = [...todos.slice(0, index), ...todos.slice(index+1)]\n      return {todos: newTasks}\n    })\n  }\n\n  onTaskAdd = (e) => {\n    if (e.key === 'Enter'){\n      this.setState(({todos}) => {\n        const form = document.getElementById('new-task-form')\n        const value = form.value\n        const task = this.createTodoItem(value, todos.length + 1)\n        const newTasks = [...todos, task]\n        form.value = ''\n        return {todos: newTasks}\n      })\n    }\n  }\n\n  onTaskEdit = (id) => {\n    this.setState(({todos}) => {\n      const newTasks = [...todos]\n      const index = todos.findIndex(el => el.key === id)\n      newTasks[index].status = 'editing'\n      return {todos: newTasks}\n    })\n  }\n\n  onTaskComplete = (id) => {\n    this.setState(({todos}) => {\n      const newTasks = [...todos]\n      const index = todos.findIndex(el => el.key === id)\n      newTasks[index].status = newTasks[index].status === 'completed' ? 'active' : 'completed'\n      return {todos: newTasks}\n    })\n  } \n\n  onClearCompleted = () => {\n    this.setState(({todos}) => {\n      const newTasks = todos.filter(el => el.status !== 'completed')\n      return {todos: newTasks}\n    })\n  } \n\n  onTaskFilter = (filter) => {\n    this.setState({filter: filter})\n  }\n\n  onTaskChange = (id, newTask) => {\n    this.setState(({todos}) => {\n      const newTasks = [...todos]\n      const index = todos.findIndex(el => el.key === id)\n      newTasks[index].status = 'active'\n      newTasks[index].description = newTask\n      return {todos: newTasks}\n    })\n  }\n  render () {\n    return (\n      <section className=\"todoapp\">\n        <Header \n          onTaskAdd = {this.onTaskAdd}\n        />\n        <section className=\"main\">\n          <TaskList \n            todos={this.state.todos}\n            filter={this.state.filter}\n            onTaskDelete = {this.onTaskDelete}\n            onTaskEdit = {this.onTaskEdit}\n            onTaskComplete = {this.onTaskComplete}\n            onTaskChange = {this.onTaskChange}\n          />\n          <Footer\n            todos={this.state.todos}\n            onClearCompleted={this.onClearCompleted}\n            onTaskFilter={this.onTaskFilter}\n          />\n        </section>\n      </section>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}