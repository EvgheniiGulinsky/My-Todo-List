{"version":3,"sources":["components/NewTaskForm/NewTaskForm.js","components/Header/Header.js","components/TaskFilter/TaskFilter.js","components/Footer/Footer.js","components/Task/Task.js","components/TaskList/TaskList.js","index.js"],"names":["NewTaskForm","onTaskAdd","className","placeholder","autoComplete","onKeyDown","id","defaultProps","Header","TaskFilter","onTaskFilter","handleFilter","event","filterButtons","document","querySelectorAll","includes","target","forEach","el","classList","remove","add","type","onClick","Footer","todos","onClearCompleted","tasksLeft","filter","status","length","Task","task","identifier","onTaskEdit","onTaskDelete","onTaskComplete","onTaskChange","textInput","useRef","useEffect","current","focus","defaultChecked","description","time","defaultValue","ref","key","newTask","value","TaskList","tasks","map","App","state","createTodoItem","componentDidMount","interval","setInterval","setState","newTasks","formatDistanceToNow","created","componentWillUnmount","clearInterval","index","findIndex","slice","form","getElementById","Date","this","Component","ReactDOM","render"],"mappings":"sPAGMA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAClB,uBACEC,UAAU,WACVC,YAAY,yBACZC,aAAa,MACbC,UAAWJ,EACXK,GAAG,mBAQPN,EAAYO,aAAe,CACzBN,UAAW,cAGED,QCjBTQ,EAAS,SAAC,GAAD,IAAGP,EAAH,EAAGA,UAAH,OACb,yBAAQC,UAAU,SAAlB,UACE,8CACA,cAAC,EAAD,CAAaD,UAAWA,QAQ5BO,EAAOD,aAAe,CACpBN,UAAW,cAEEO,QCdTC,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACdC,EAAe,SAACC,GACpB,IAAMC,EAAa,YAAOC,SAASC,iBAAiB,uBAChDF,EAAcG,SAASJ,EAAMK,UAC/BJ,EAAcK,SAAQ,SAACC,GAAD,OAAQA,EAAGC,UAAUC,OAAO,eAClDT,EAAMK,OAAOG,UAAUE,IAAI,YAC3BZ,EAAaE,EAAMK,OAAOX,MAG9B,OACE,qBAAIJ,UAAU,UAAd,UACE,6BACE,wBAAQqB,KAAK,SAASrB,UAAU,WAAWI,GAAG,MAAMkB,QAASb,EAA7D,mBAIF,6BACE,wBAAQY,KAAK,SAASjB,GAAG,SAASkB,QAASb,EAA3C,sBAIF,6BACE,wBAAQY,KAAK,SAASjB,GAAG,YAAYkB,QAASb,EAA9C,6BAQRF,EAAWF,aAAe,CACxBG,aAAc,cAMDD,QCrCTgB,EAAS,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,iBAAkBjB,EAAmB,EAAnBA,aACnCkB,EAAYF,EAAMG,QAAO,SAACV,GAAD,MAAsB,cAAdA,EAAGW,UAAwBC,OAClE,OACE,yBAAQ7B,UAAU,SAAlB,UACE,sBAAMA,UAAU,aAAhB,mBAAiC0B,EAAjC,iBACA,cAAC,EAAD,CAAYlB,aAAcA,IAC1B,wBAAQR,UAAU,kBAAkBsB,QAASG,EAAkBJ,KAAK,SAApE,iCAYNE,EAAOlB,aAAe,CACpBmB,MAAO,GACPC,iBAAkB,aAClBjB,aAAc,cAGDe,QCxBTO,EAAO,SAAC,GAAkF,IAAhFC,EAA+E,EAA/EA,KAAMC,EAAyE,EAAzEA,WAAYC,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aACpEC,EAAYC,iBAAO,MAMzB,OALAC,qBAAU,WACY,YAAhBR,EAAKH,QACPS,EAAUG,QAAQC,WAIpB,qBAAIzC,UAAW+B,EAAKH,OAApB,UACE,sBAAK5B,UAAU,OAAf,UACE,uBACEA,UAAU,SACVqB,KAAK,WACLqB,eAAgC,cAAhBX,EAAKH,OAAyB,UAAY,GAC1DN,QAAS,kBAAMa,EAAeH,MAEhC,kCACE,sBAAMhC,UAAU,cAAhB,SAA+B+B,EAAKY,cACpC,sBAAM3C,UAAU,UAAhB,2BAAsC+B,EAAKa,KAA3C,aAEF,wBACEvB,KAAK,SACLrB,UAAU,iBACVsB,QAAS,WACa,cAAhBS,EAAKH,QACPK,EAAWD,MAIjB,wBAAQX,KAAK,SAASrB,UAAU,oBAAoBsB,QAAS,kBAAMY,EAAaF,SAEjE,YAAhBD,EAAKH,OACJ,uBACEP,KAAK,OACLrB,UAAU,OACV6C,aAAcd,EAAKY,YACnBG,IAAKT,EACLlC,UAAW,SAACc,GACV,GAAe,UAAXA,EAAG8B,IAAiB,CACtB,IAAMC,EAAU/B,EAAGF,OAAOkC,MAC1Bb,EAAaJ,EAAYgB,OAI7B,OApC2BhB,IAyCrCF,EAAKzB,aAAe,CAClB4B,WAAY,aACZC,aAAc,aACdC,eAAgB,aAChBC,aAAc,aACdL,KAAM,GACNC,WAAY,GAkBCF,QCzEToB,EAAW,SAAC,GAA+E,IAA7E1B,EAA4E,EAA5EA,MAAOG,EAAqE,EAArEA,OAAQO,EAA6D,EAA7DA,aAAcD,EAA+C,EAA/CA,WAAYE,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aAErEe,EADW3B,EAAMG,QAAO,SAACV,GAAD,MAAmB,QAAXU,GAAoBV,EAAGW,SAAWD,KACjDyB,KAAI,SAACnC,GAAD,OACzB,cAAC,EAAD,CACEc,KAAMd,EACNe,WAAYf,EAAG8B,IAEfb,aAAcA,EACdD,WAAYA,EACZE,eAAgBA,EAChBC,aAAcA,GAJTnB,EAAG8B,QAOZ,OAAO,oBAAI/C,UAAU,YAAd,SAA2BmD,KAGpCD,EAAS7C,aAAe,CACtBmB,MAAO,GACPG,OAAQ,MACRO,aAAc,aACdD,WAAY,aACZE,eAAgB,aAChBC,aAAc,cAYDc,QC5BMG,E,4MACnBC,MAAQ,CACN9B,MAAO,CACL,EAAK+B,eAAe,aAAc,GAClC,EAAKA,eAAe,cAAe,GACnC,EAAKA,eAAe,aAAc,IAEpC5B,OAAQ,O,EAGV6B,kBAAoB,WAClB,EAAKC,SAAWC,aACd,kBACE,EAAKC,UAAS,YAAgB,IAAbnC,EAAY,EAAZA,MACToC,EAAQ,YAAOpC,GAIrB,OAHAoC,EAAS5C,SAAQ,SAACC,GAChBA,EAAG2B,KAAOiB,YAAoB5C,EAAG6C,YAE5B,CAAEtC,MAAOoC,QAEpB,O,EAIJG,qBAAuB,WACrBC,cAAc,EAAKP,W,EAGrBvB,aAAe,SAAC9B,GACd,EAAKuD,UAAS,YAAgB,IAAbnC,EAAY,EAAZA,MACTyC,EAAQzC,EAAM0C,WAAU,SAACjD,GAAD,OAAQA,EAAG8B,MAAQ3C,KAEjD,MAAO,CAAEoB,MADK,sBAAOA,EAAM2C,MAAM,EAAGF,IAAtB,YAAiCzC,EAAM2C,MAAMF,EAAQ,U,EAKvElE,UAAY,SAACkB,GACI,UAAXA,EAAG8B,KACL,EAAKY,UAAS,YAAgB,IAAbnC,EAAY,EAAZA,MACT4C,EAAOxD,SAASyD,eAAe,iBAC7BpB,EAAUmB,EAAVnB,MACFlB,EAAO,EAAKwB,eAAeN,EAAOzB,EAAMK,OAAS,GACjD+B,EAAQ,sBAAOpC,GAAP,CAAcO,IAE5B,OADAqC,EAAKnB,MAAQ,GACN,CAAEzB,MAAOoC,O,EAKtB3B,WAAa,SAAC7B,GACZ,EAAKuD,UAAS,YAAgB,IAAbnC,EAAY,EAAZA,MACToC,EAAQ,YAAOpC,GAGrB,OADAoC,EADcpC,EAAM0C,WAAU,SAACjD,GAAD,OAAQA,EAAG8B,MAAQ3C,MACjCwB,OAAS,UAClB,CAAEJ,MAAOoC,O,EAIpBzB,eAAiB,SAAC/B,GAChB,EAAKuD,UAAS,YAAgB,IAAbnC,EAAY,EAAZA,MACToC,EAAQ,YAAOpC,GACfyC,EAAQzC,EAAM0C,WAAU,SAACjD,GAAD,OAAQA,EAAG8B,MAAQ3C,KAEjD,OADAwD,EAASK,GAAOrC,OAAoC,cAA3BgC,EAASK,GAAOrC,OAAyB,SAAW,YACtE,CAAEJ,MAAOoC,O,EAIpBnC,iBAAmB,WACjB,EAAKkC,UAAS,YAEZ,MAAO,CAAEnC,MAFkB,EAAZA,MACQG,QAAO,SAACV,GAAD,MAAsB,cAAdA,EAAGW,e,EAK7CpB,aAAe,SAACmB,GACd,EAAKgC,SAAS,CAAEhC,Y,EAGlBS,aAAe,SAAChC,EAAI4C,GAClB,EAAKW,UAAS,YAAgB,IAAbnC,EAAY,EAAZA,MACToC,EAAQ,YAAOpC,GACfyC,EAAQzC,EAAM0C,WAAU,SAACjD,GAAD,OAAQA,EAAG8B,MAAQ3C,KAGjD,OAFAwD,EAASK,GAAOrC,OAAS,SACzBgC,EAASK,GAAOtB,YAAcK,EACvB,CAAExB,MAAOoC,O,oDAIpB,SAAejB,EAAavC,GAAwB,IAApBwB,EAAmB,uDAAV,SACvC,MAAO,CACLe,cACAf,SACAmB,IAAK3C,EACL0D,QAAS,IAAIQ,KACb1B,KAAMiB,YAAoB,IAAIS,S,oBAIlC,WAAU,IAAD,EACmBC,KAAKjB,MAAvB9B,EADD,EACCA,MAAOG,EADR,EACQA,OACf,OACE,0BAAS3B,UAAU,UAAnB,UACE,cAAC,EAAD,CAAQD,UAAWwE,KAAKxE,YACxB,0BAASC,UAAU,OAAnB,UACE,cAAC,EAAD,CACEwB,MAAOA,EACPG,OAAQA,EACRO,aAAcqC,KAAKrC,aACnBD,WAAYsC,KAAKtC,WACjBE,eAAgBoC,KAAKpC,eACrBC,aAAcmC,KAAKnC,eAErB,cAAC,EAAD,CAAQZ,MAAOA,EAAOC,iBAAkB8C,KAAK9C,iBAAkBjB,aAAc+D,KAAK/D,yB,GAhH3DgE,aAuHjCC,IAASC,OAAO,cAAC,EAAD,IAAS9D,SAASyD,eAAe,W","file":"static/js/main.776d7d8e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NewTaskForm = ({ onTaskAdd }) => (\n  <input\n    className=\"new-todo\"\n    placeholder=\"What needs to be done?\"\n    autoComplete=\"off\"\n    onKeyDown={onTaskAdd}\n    id=\"new-task-form\"\n  />\n);\n\nNewTaskForm.propTypes = {\n  onTaskAdd: PropTypes.func,\n};\n\nNewTaskForm.defaultProps = {\n  onTaskAdd: () => {},\n};\n\nexport default NewTaskForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NewTaskForm from '../NewTaskForm/NewTaskForm';\n\nconst Header = ({ onTaskAdd }) => (\n  <header className=\"header\">\n    <h1>My Todo List</h1>\n    <NewTaskForm onTaskAdd={onTaskAdd} />\n  </header>\n);\n\nHeader.propTypes = {\n  onTaskAdd: PropTypes.func,\n};\n\nHeader.defaultProps = {\n  onTaskAdd: () => {},\n};\nexport default Header;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TaskFilter = ({ onTaskFilter }) => {\n  const handleFilter = (event) => {\n    const filterButtons = [...document.querySelectorAll('.filters li button')];\n    if (filterButtons.includes(event.target)) {\n      filterButtons.forEach((el) => el.classList.remove('selected'));\n      event.target.classList.add('selected');\n      onTaskFilter(event.target.id);\n    }\n  };\n  return (\n    <ul className=\"filters\">\n      <li>\n        <button type=\"button\" className=\"selected\" id=\"All\" onClick={handleFilter}>\n          All\n        </button>\n      </li>\n      <li>\n        <button type=\"button\" id=\"active\" onClick={handleFilter}>\n          Active\n        </button>\n      </li>\n      <li>\n        <button type=\"button\" id=\"completed\" onClick={handleFilter}>\n          Completed\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nTaskFilter.defaultProps = {\n  onTaskFilter: () => {},\n};\nTaskFilter.propTypes = {\n  onTaskFilter: PropTypes.func,\n};\n\nexport default TaskFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TaskFilter from '../TaskFilter/TaskFilter';\n\nconst Footer = ({ todos, onClearCompleted, onTaskFilter }) => {\n  const tasksLeft = todos.filter((el) => el.status !== 'completed').length;\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{`${tasksLeft} items left`}</span>\n      <TaskFilter onTaskFilter={onTaskFilter} />\n      <button className=\"clear-completed\" onClick={onClearCompleted} type=\"button\">\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object),\n  onClearCompleted: PropTypes.func,\n  onTaskFilter: PropTypes.func,\n};\nFooter.defaultProps = {\n  todos: [],\n  onClearCompleted: () => {},\n  onTaskFilter: () => {},\n};\n\nexport default Footer;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Task = ({ task, identifier, onTaskEdit, onTaskDelete, onTaskComplete, onTaskChange }) => {\n  const textInput = useRef(null);\n  useEffect(() => {\n    if (task.status === 'editing') {\n      textInput.current.focus();\n    }\n  });\n  return (\n    <li className={task.status} key={identifier}>\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          defaultChecked={task.status === 'completed' ? 'checked' : ''}\n          onClick={() => onTaskComplete(identifier)}\n        />\n        <label>\n          <span className=\"description\">{task.description}</span>\n          <span className=\"created\">{`Created ${task.time} ago`}</span>\n        </label>\n        <button\n          type=\"button\"\n          className=\"icon icon-edit\"\n          onClick={() => {\n            if (task.status !== 'completed') {\n              onTaskEdit(identifier);\n            }\n          }}\n        />\n        <button type=\"button\" className=\"icon icon-destroy\" onClick={() => onTaskDelete(identifier)} />\n      </div>\n      {task.status === 'editing' ? (\n        <input\n          type=\"text\"\n          className=\"edit\"\n          defaultValue={task.description}\n          ref={textInput}\n          onKeyDown={(el) => {\n            if (el.key === 'Enter') {\n              const newTask = el.target.value;\n              onTaskChange(identifier, newTask);\n            }\n          }}\n        />\n      ) : null}\n    </li>\n  );\n};\n\nTask.defaultProps = {\n  onTaskEdit: () => {},\n  onTaskDelete: () => {},\n  onTaskComplete: () => {},\n  onTaskChange: () => {},\n  task: {},\n  identifier: 0,\n};\n\nTask.propTypes = {\n  onTaskEdit: PropTypes.func,\n  onTaskDelete: PropTypes.func,\n  onTaskComplete: PropTypes.func,\n  onTaskChange: PropTypes.func,\n  task: PropTypes.shape({\n    description: PropTypes.string,\n    status: PropTypes.string,\n    key: PropTypes.number,\n    created: PropTypes.instanceOf(Date),\n    time: PropTypes.string,\n  }),\n  identifier: PropTypes.number,\n};\n\nexport default Task;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Task from '../Task/Task';\n\nconst TaskList = ({ todos, filter, onTaskDelete, onTaskEdit, onTaskComplete, onTaskChange }) => {\n  const filtered = todos.filter((el) => filter === 'All' || el.status === filter);\n  const tasks = filtered.map((el) => (\n    <Task\n      task={el}\n      identifier={el.key}\n      key={el.key}\n      onTaskDelete={onTaskDelete}\n      onTaskEdit={onTaskEdit}\n      onTaskComplete={onTaskComplete}\n      onTaskChange={onTaskChange}\n    />\n  ));\n  return <ul className=\"todo-list\">{tasks}</ul>;\n};\n\nTaskList.defaultProps = {\n  todos: [],\n  filter: 'All',\n  onTaskDelete: () => {},\n  onTaskEdit: () => {},\n  onTaskComplete: () => {},\n  onTaskChange: () => {},\n};\n\nTaskList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object),\n  filter: PropTypes.string,\n  onTaskDelete: PropTypes.func,\n  onTaskEdit: PropTypes.func,\n  onTaskComplete: PropTypes.func,\n  onTaskChange: PropTypes.func,\n};\n\nexport default TaskList;\n","/* eslint-disable no-param-reassign */\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './app.css';\nimport { formatDistanceToNow } from 'date-fns';\n\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport TaskList from './components/TaskList/TaskList';\n\nexport default class App extends Component {\n  state = {\n    todos: [\n      this.createTodoItem('First task', 0),\n      this.createTodoItem('Second task', 1),\n      this.createTodoItem('Third task', 2),\n    ],\n    filter: 'All',\n  };\n\n  componentDidMount = () => {\n    this.interval = setInterval(\n      () =>\n        this.setState(({ todos }) => {\n          const newTasks = [...todos];\n          newTasks.forEach((el) => {\n            el.time = formatDistanceToNow(el.created);\n          });\n          return { todos: newTasks };\n        }),\n      31000\n    );\n  };\n\n  componentWillUnmount = () => {\n    clearInterval(this.interval);\n  };\n\n  onTaskDelete = (id) => {\n    this.setState(({ todos }) => {\n      const index = todos.findIndex((el) => el.key === id);\n      const newTasks = [...todos.slice(0, index), ...todos.slice(index + 1)];\n      return { todos: newTasks };\n    });\n  };\n\n  onTaskAdd = (el) => {\n    if (el.key === 'Enter') {\n      this.setState(({ todos }) => {\n        const form = document.getElementById('new-task-form');\n        const { value } = form;\n        const task = this.createTodoItem(value, todos.length + 1);\n        const newTasks = [...todos, task];\n        form.value = '';\n        return { todos: newTasks };\n      });\n    }\n  };\n\n  onTaskEdit = (id) => {\n    this.setState(({ todos }) => {\n      const newTasks = [...todos];\n      const index = todos.findIndex((el) => el.key === id);\n      newTasks[index].status = 'editing';\n      return { todos: newTasks };\n    });\n  };\n\n  onTaskComplete = (id) => {\n    this.setState(({ todos }) => {\n      const newTasks = [...todos];\n      const index = todos.findIndex((el) => el.key === id);\n      newTasks[index].status = newTasks[index].status === 'completed' ? 'active' : 'completed';\n      return { todos: newTasks };\n    });\n  };\n\n  onClearCompleted = () => {\n    this.setState(({ todos }) => {\n      const newTasks = todos.filter((el) => el.status !== 'completed');\n      return { todos: newTasks };\n    });\n  };\n\n  onTaskFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  onTaskChange = (id, newTask) => {\n    this.setState(({ todos }) => {\n      const newTasks = [...todos];\n      const index = todos.findIndex((el) => el.key === id);\n      newTasks[index].status = 'active';\n      newTasks[index].description = newTask;\n      return { todos: newTasks };\n    });\n  };\n\n  createTodoItem(description, id, status = 'active') {\n    return {\n      description,\n      status,\n      key: id,\n      created: new Date(),\n      time: formatDistanceToNow(new Date()),\n    };\n  }\n\n  render() {\n    const { todos, filter } = this.state;\n    return (\n      <section className=\"todoapp\">\n        <Header onTaskAdd={this.onTaskAdd} />\n        <section className=\"main\">\n          <TaskList\n            todos={todos}\n            filter={filter}\n            onTaskDelete={this.onTaskDelete}\n            onTaskEdit={this.onTaskEdit}\n            onTaskComplete={this.onTaskComplete}\n            onTaskChange={this.onTaskChange}\n          />\n          <Footer todos={todos} onClearCompleted={this.onClearCompleted} onTaskFilter={this.onTaskFilter} />\n        </section>\n      </section>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}